@using HOA.Model
@*
    For more information on enabling MVC for empty projects, visit http://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    ViewBag.Title = "Submissions";
}

<div class="col-md-8">

    <h3>Submission</h3>

    <div class="panel panel-default">
        <div class="panel-heading">Details</div>
        <div class="panel-body">
        
        
            <strong>Code</strong>: @Model.Submission.Code<br />
            <br />
            @Model.Submission.FirstName @Model.Submission.LastName<br />
            @Model.Submission.Email <br />
            @Model.Submission.Address<br />
            <br />
            <span style="white-space: pre-line">
                @Model.Submission.Description
            </span>
            <br />

            <h5><strong>Files</strong></h5>
            <ul>
            @foreach(var file in Model.Submission.Files)
            {
                @:<li><a href="/Submission/File/@file.Id">@file.Name</a></li>
            }
            </ul>

            @if (Model.Submission.ResponseDocumentFileName != null)
            {
                <br />
                <h5><strong>Final Response</strong></h5>
                @:<a href="/Submission/ResponseFile/@Model.Submission.Id">@Model.Submission.ResponseDocumentFileName</a>
            }

            @if (Model.Submission.PrecedentSetting)
            {
                <p class="bg-warning">Marked as precedent setting</p>
            }

        </div>
    </div>

    <b>Status:</b> @Model.Submission.Status<br />

    @if (Model.Submission.Status == Status.CommitteeReview)
    {
        @Model.CurrentReviewCount
        @: review(s) submitted of @Model.ReviewerCount  <br />
        <br />
    }

    @if (Model.Submission.Reviews != null && Model.Submission.Reviews.Count > 0)
    {
        @: <h3>Reviews:</h3>

        

        foreach (var review in Model.Submission.Reviews)
        {
            if (review.SubmissionRevision != Model.Submission.Revision)
            {
                continue;
            }

            @review.Reviewer.FullName@:, @HOA.Util.DateHtmlHelper.ConvertToLocalDate(review.Created, "MM/dd/yyyy") <br />

            if (review.Status == ReviewStatus.Approved)
            {
                @: Approved
            }
            else if(review.Status == ReviewStatus.Rejected)
            {
                @: Rejected
            }
            else if (review.Status == ReviewStatus.ConditionallyApproved)
            {
                @: Conditionally Approved
            }
            else if (review.Status == ReviewStatus.MissingInformation)
            {
                @: Missing Information
            }
            else if (review.Status == ReviewStatus.Abstain)
            {
                @: Abstain
            }
            <br />
            @review.Comments<br />

            <br />
        }

        bool oldReviewsShown = false;
        foreach (var review in Model.Submission.Reviews)
        {
            if (review.SubmissionRevision == Model.Submission.Revision)
            {
                continue;
            }

            if (!oldReviewsShown)
            {
                oldReviewsShown = true;
                @: <h3>Old Reviews</h3>
            }

            @review.Reviewer.FullName@:, @HOA.Util.DateHtmlHelper.ConvertToLocalDate(review.Created, "MM/dd/yyyy") <br />


            if (review.Status == ReviewStatus.Approved)
            {
                @: Approved
            }
            else if (review.Status == ReviewStatus.Rejected)
            {
                @: Rejected
            }
            else if (review.Status == ReviewStatus.ConditionallyApproved)
            {
                @: Conditionally Approved
            }
            else if (review.Status == ReviewStatus.MissingInformation)
            {
                @: Missing Information
            }
            else if (review.Status == ReviewStatus.Abstain)
            {
                @: Abstain
            }
            <br />
            @review.Comments<br />

            <br />
        }

    
    }

    @if (Model.Submission.Comments != null && Model.Submission.Comments.Count > 0)
    {
        @: <h3>Internal Comments:</h3>
        foreach (var comment in Model.Submission.Comments)
        {
            @comment.User.FullName@:, @HOA.Util.DateHtmlHelper.ConvertToLocalDate(comment.Created, "g") <br />
            @comment.Comments<br />
            <br />
        }
    }


    <h3>Action:</h3>
    @if (Model.Submission.Status == Status.CommunityMgrReview && (User.IsInRole(RoleNames.CommunityManager)))
    {
        <a href="/Submission/QuickApprove/@Model.Submission.Id">Quick Approve</a><br />
        <br />
    }

    @if ((Model.Submission.Status == Status.CommunityMgrReview && (User.IsInRole(RoleNames.CommunityManager) || User.IsInRole(RoleNames.Administrator))) ||
                    (Model.Submission.Status == Status.ARBChairReview && (User.IsInRole(RoleNames.BoardChairman) || User.IsInRole(RoleNames.Administrator))))
    {
        <a href="/Submission/CheckCompleteness/@Model.Submission.Id">Check for completeness</a><br />
        <br />
    }
    else if (Model.Submission.Status == Status.CommitteeReview && User.IsInRole(RoleNames.ARBBoardMember))
    {
        if (!Model.Reviewed)
        {
            <a href="/Submission/Review/@Model.Submission.Id">Review</a>
        }
        else
        {
            @: Already reviewed
    }
    }
    else if (Model.Submission.Status == Status.ARBTallyVotes && (User.IsInRole(RoleNames.BoardChairman) || User.IsInRole(RoleNames.Administrator)))
    {
        <a href="/Submission/TallyVotes/@Model.Submission.Id">Tally votes</a>
    }
    else if (Model.Submission.Status == Status.HOALiasonReview && (User.IsInRole(RoleNames.HOALiaison) || User.IsInRole(RoleNames.Administrator)))
    {
        <a href="/Submission/FinalCheck/@Model.Submission.Id">Final liason check</a>
    }
    else if (Model.Submission.Status == Status.FinalResponse && User.IsInRole(RoleNames.CommunityManager))
    {
        <a href="/Submission/FinalResponse/@Model.Submission.Id">Homeowner final response</a>
    }
    else if (Model.Submission.Status == Status.CommunityMgrReturn && User.IsInRole(RoleNames.CommunityManager))
    {
        <a href="/Submission/CommunityMgrReturn/@Model.Submission.Id">Return to homeowner</a>
    }
    else if (Model.Submission.Status == Status.HOALiasonInput && User.IsInRole(RoleNames.HOALiaison))
    {
    <br />
    <a href="/Submission/LiasonInput/@Model.Submission.Id" role="button">Add HOA board input</a><br />
    }
    else
    {
        @: None
    }

    @if ((Model.Submission.Status == Status.CommunityMgrReview || Model.Submission.Status == Status.ARBChairReview) &&
                                    (User.IsInRole(RoleNames.CommunityManager) || User.IsInRole(RoleNames.Administrator)))
    {
        
        <a href="/Submission/Edit/@Model.Submission.Id" role="button">Edit details</a><br />
        <br />
    }

    @if (User.IsInRole(RoleNames.Administrator) || User.IsInRole(RoleNames.CommunityManager))
    {
        <br />
        <a href="/Submission/Delete/@Model.Submission.Id" onclick="if (!confirm('Are you sure?')) return false;">Delete</a>
    }
    
    @if (Model.Submission.Status == Status.ARBTallyVotes && User.IsInRole(RoleNames.BoardChairman))
    {
        <br />
        <a href="/Submission/GetHOAInput/@Model.Submission.Id">Send to HOA for input</a>
    }

    
    @if ((Model.Submission.Status == Status.ARBChairReview || Model.Submission.Status == Status.CommitteeReview) &&
                (!Model.Submission.PrecedentSetting && User.IsInRole(RoleNames.BoardChairman)))
    {
        <br />
        @Html.ActionLink("Mark as precedent setting", "PrecedentSetting", new { Id = Model.Submission.Id })
    }


     @if (Model.Submission.Status == Status.CommitteeReview && User.IsInRole(RoleNames.BoardChairman))
     {
        <br />
        <a href="/Submission/SkipQuorum/@Model.Submission.Id" onclick="if (!confirm('Are you sure?')) return false;">Skip Quorum</a>
     }

    @if ((Model.Submission.Status == Status.Approved || Model.Submission.Status == Status.ConditionallyApproved)
        && User.IsInRole(RoleNames.CommunityManager) && Model.Submission.ResponseDocumentBlob == null)
    {
        <br />
        <a href="/Submission/AddApprovalDoc/@Model.Submission.Id" role="button">Add approval document</a><br />
    }
    



</div>

<div class="col-md-4">
    <!-- Audit history -->
    @if (Model.Submission.Audits != null && Model.Submission.Audits.Count > 0)
    {
        @: <h3>History</h3>
        <div class="list-group">


        @foreach (var history in Model.Submission.Audits)
        {


            <a href="#" class="list-group-item">
                <h4 class="list-group-item-heading">@history.User</h4>
                <p class="list-group-item-text">@HOA.Util.DateHtmlHelper.ConvertToLocalDate(history.DateTime, "MM/dd/yyyy hh:mm tt").<br>
                @history.Action
                </p>
            </a>
            
        }


        </div>
    }


    

</div>
